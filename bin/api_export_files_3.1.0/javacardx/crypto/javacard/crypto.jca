// converted by version  [v3.1.0]
// on Tue Jul 06 15:18:10 PDT 2021

.package javacardx/crypto {
	.aid 0xA0:0x0:0x0:0x0:0x62:0x2:0x1;
	.version 1.7;

	.imports {
		0xA0:0x0:0x0:0x0:0x62:0x0:0x1 1.0;		//java/lang
		0xA0:0x0:0x0:0x0:0x62:0x1:0x2 1.7;		//javacard/security
	}

	.constantPool {
		// 0
		instanceFieldRef Cipher Cipher$OneShot/actual;
		// 1
		staticMethodRef 0.0.0()V;		// java/lang/Object.<init>()V
		// 2
		staticMethodRef Cipher/<init>()V;
		// 3
		staticMethodRef 1.12.1(S)V;		// javacard/security/CryptoException.throwIt(S)V
		// 4
		virtualMethodRef Cipher/init(Ljavacard/security/Key;B)V;
			.descriptor	Ljavacard/security/Key;	1.0;

		// 5
		virtualMethodRef Cipher/init(Ljavacard/security/Key;B[BSS)V;
			.descriptor	Ljavacard/security/Key;	1.0;

		// 6
		virtualMethodRef Cipher/getAlgorithm()B;
		// 7
		virtualMethodRef Cipher/doFinal([BSS[BS)S;
	}

	.interface public abstract KeyEncryption 0 {

		.method public abstract getKeyCipher()Ljavacardx/crypto/Cipher; 0 {
		}

		.method public abstract setKeyCipher(Ljavacardx/crypto/Cipher;)V 1 {
		}

	}

	.class public abstract Cipher 1 extends 0.0 {		// extends java/lang/Object

		.fields {
			public static final byte ALG_DES_CBC_NOPAD = 1;		// B
			public static final byte ALG_DES_CBC_ISO9797_M1 = 2;		// B
			public static final byte ALG_DES_CBC_ISO9797_M2 = 3;		// B
			public static final byte ALG_DES_CBC_PKCS5 = 4;		// B
			public static final byte ALG_DES_ECB_NOPAD = 5;		// B
			public static final byte ALG_DES_ECB_ISO9797_M1 = 6;		// B
			public static final byte ALG_DES_ECB_ISO9797_M2 = 7;		// B
			public static final byte ALG_DES_ECB_PKCS5 = 8;		// B
			public static final byte ALG_RSA_ISO14888 = 9;		// B
			public static final byte ALG_RSA_PKCS1 = 10;		// B
			public static final byte ALG_RSA_ISO9796 = 11;		// B
			public static final byte ALG_RSA_NOPAD = 12;		// B
			public static final byte ALG_AES_BLOCK_128_CBC_NOPAD = 13;		// B
			public static final byte ALG_AES_BLOCK_128_ECB_NOPAD = 14;		// B
			public static final byte ALG_RSA_PKCS1_OAEP = 15;		// B
			public static final byte ALG_KOREAN_SEED_ECB_NOPAD = 16;		// B
			public static final byte ALG_KOREAN_SEED_CBC_NOPAD = 17;		// B
			public static final byte ALG_AES_BLOCK_192_CBC_NOPAD = 18;		// B
			public static final byte ALG_AES_BLOCK_192_ECB_NOPAD = 19;		// B
			public static final byte ALG_AES_BLOCK_256_CBC_NOPAD = 20;		// B
			public static final byte ALG_AES_BLOCK_256_ECB_NOPAD = 21;		// B
			public static final byte ALG_AES_CBC_ISO9797_M1 = 22;		// B
			public static final byte ALG_AES_CBC_ISO9797_M2 = 23;		// B
			public static final byte ALG_AES_CBC_PKCS5 = 24;		// B
			public static final byte ALG_AES_ECB_ISO9797_M1 = 25;		// B
			public static final byte ALG_AES_ECB_ISO9797_M2 = 26;		// B
			public static final byte ALG_AES_ECB_PKCS5 = 27;		// B
			public static final byte CIPHER_AES_CBC = 1;		// B
			public static final byte CIPHER_AES_ECB = 2;		// B
			public static final byte CIPHER_DES_CBC = 3;		// B
			public static final byte CIPHER_DES_ECB = 4;		// B
			public static final byte CIPHER_KOREAN_SEED_CBC = 5;		// B
			public static final byte CIPHER_KOREAN_SEED_ECB = 6;		// B
			public static final byte CIPHER_RSA = 7;		// B
			public static final byte CIPHER_AES_CTR = 8;		// B
			public static final byte CIPHER_AES_CFB = 9;		// B
			public static final byte CIPHER_AES_XTS = 10;		// B
			public static final byte CIPHER_SM4_ECB = 11;		// B
			public static final byte CIPHER_SM4_CBC = 12;		// B
			public static final byte CIPHER_SM2 = 13;		// B
			public static final byte PAD_NULL = 0;		// B
			public static final byte PAD_NOPAD = 1;		// B
			public static final byte PAD_ISO9797_M1 = 2;		// B
			public static final byte PAD_ISO9797_M2 = 3;		// B
			public static final byte PAD_ISO9797_1_M1_ALG3 = 4;		// B
			public static final byte PAD_ISO9797_1_M2_ALG3 = 5;		// B
			public static final byte PAD_PKCS5 = 6;		// B
			public static final byte PAD_PKCS1 = 7;		// B
			public static final byte PAD_PKCS1_PSS = 8;		// B
			public static final byte PAD_PKCS1_OAEP = 9;		// B
			public static final byte PAD_PKCS1_OAEP_SHA224 = 13;		// B
			public static final byte PAD_PKCS1_OAEP_SHA256 = 14;		// B
			public static final byte PAD_PKCS1_OAEP_SHA384 = 15;		// B
			public static final byte PAD_PKCS1_OAEP_SHA512 = 16;		// B
			public static final byte PAD_PKCS1_OAEP_SHA3_224 = 17;		// B
			public static final byte PAD_PKCS1_OAEP_SHA3_256 = 18;		// B
			public static final byte PAD_PKCS1_OAEP_SHA3_384 = 19;		// B
			public static final byte PAD_PKCS1_OAEP_SHA3_512 = 20;		// B
			public static final byte PAD_ISO9796 = 10;		// B
			public static final byte PAD_ISO9796_MR = 11;		// B
			public static final byte PAD_RFC2409 = 12;		// B
			public static final byte PAD_ISO9796_MR_SCHEME_2 = 21;		// B
			public static final byte PAD_ISO9796_MR_SCHEME_3 = 22;		// B
			public static final byte MODE_DECRYPT = 1;		// B
			public static final byte MODE_ENCRYPT = 2;		// B
			public static final byte ALG_AES_CTR = -16;		// B
			public static final byte ALG_AES_CFB = 28;		// B
			public static final byte ALG_AES_XTS = 29;		// B
		}

		.publicMethodTable 1 8 {
			equals(Ljava/lang/Object;)Z 0;
			doFinal([BSS[BS)S 255;
			getAlgorithm()B 255;
			init(Ljavacard/security/Key;B)V 255;
			init(Ljavacard/security/Key;B[BSS)V 255;
			update([BSS[BS)S 255;
			getCipherAlgorithm()B 255;
			getPaddingAlgorithm()B 255;
		}

		.packageMethodTable 0 {
		}

		.method public static final getInstance(BZ)Ljavacardx/crypto/Cipher; 0 {
			.stack 1;
			.locals 0;

				L0:	sload_0;
					slookupswitch L1 0;
				L1:	sconst_3;
					invokestatic 3;		// javacard/security/CryptoException.throwIt(S)V
					aconst_null;
					areturn;
		}

		.method public static final getInstance(BBZ)Ljavacardx/crypto/Cipher; 2 {
			.stack 1;
			.locals 0;

				L0:	sconst_3;
					invokestatic 3;		// javacard/security/CryptoException.throwIt(S)V
					aconst_null;
					areturn;
		}

		.method protected <init>()V 1 {
			.stack 1;
			.locals 0;

				L0:	aload_0;
					invokespecial 1;		// java/lang/Object.<init>()V
					return;
		}

		.method public abstract init(Ljavacard/security/Key;B)V 3 {
			.descriptor	Ljavacard/security/Key;	1.0;

		}

		.method public abstract init(Ljavacard/security/Key;B[BSS)V 4 {
			.descriptor	Ljavacard/security/Key;	1.0;

		}

		.method public abstract getAlgorithm()B 2 {
		}

		.method public abstract getCipherAlgorithm()B 6 {
		}

		.method public abstract getPaddingAlgorithm()B 7 {
		}

		.method public abstract doFinal([BSS[BS)S 1 {
		}

		.method public abstract update([BSS[BS)S 5 {
		}

	}

	.class public final Cipher$OneShot 2 extends Cipher {

		.fields {
			private final Cipher actual 0;		// Ljavacardx/crypto/Cipher;
		}

		.publicMethodTable 1 9 {
			equals(Ljava/lang/Object;)Z 0;
			doFinal([BSS[BS)S 1;
			getAlgorithm()B 2;
			init(Ljavacard/security/Key;B)V 3;
			init(Ljavacard/security/Key;B[BSS)V 4;
			update([BSS[BS)S 5;
			getCipherAlgorithm()B 6;
			getPaddingAlgorithm()B 7;
			close()V 255;
		}

		.packageMethodTable 0 {
		}

		.method public static final open(BB)Ljavacardx/crypto/Cipher$OneShot; 0 {
			.stack 1;
			.locals 0;

				L0:	sconst_3;
					invokestatic 3;		// javacard/security/CryptoException.throwIt(S)V
					aconst_null;
					areturn;
		}

		.method private <init>(Ljavacardx/crypto/Cipher;)V {
			.stack 2;
			.locals 0;

				L0:	aload_0;
					invokespecial 2;		// javacardx/crypto/Cipher.<init>()V
					aload_1;
					putfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					return;
		}

		.method public close()V 8 {
			.stack 0;
			.locals 0;

				L0:	return;
		}

		.method public update([BSS[BS)S 5 {
			.stack 1;
			.locals 0;

				L0:	sconst_5;
					invokestatic 3;		// javacard/security/CryptoException.throwIt(S)V
					sconst_0;
					sreturn;
		}

		.method public init(Ljavacard/security/Key;B)V 3 {
			.stack 3;
			.locals 0;

			.descriptor	Ljavacard/security/Key;	1.0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					aload_1;
					sload_2;
					invokevirtual 4;		// init(Ljavacard/security/Key;B)V
					return;
		}

		.method public init(Ljavacard/security/Key;B[BSS)V 4 {
			.stack 6;
			.locals 0;

			.descriptor	Ljavacard/security/Key;	1.0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					aload_1;
					sload_2;
					aload_3;
					sload 4;
					sload 5;
					invokevirtual 5;		// init(Ljavacard/security/Key;B[BSS)V
					return;
		}

		.method public getAlgorithm()B 2 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					invokevirtual 6;		// getAlgorithm()B
					sreturn;
		}

		.method public getCipherAlgorithm()B 6 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					invokevirtual 6;		// getAlgorithm()B
					sreturn;
		}

		.method public getPaddingAlgorithm()B 7 {
			.stack 1;
			.locals 0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					invokevirtual 6;		// getAlgorithm()B
					sreturn;
		}

		.method public doFinal([BSS[BS)S 1 {
			.stack 6;
			.locals 0;

				L0:	getfield_a_this 0;		// reference javacardx/crypto/Cipher$OneShot.actual
					aload_1;
					sload_2;
					sload_3;
					aload 4;
					sload 5;
					invokevirtual 7;		// doFinal([BSS[BS)S
					sreturn;
		}

	}

	.class public abstract AEADCipher 3 extends Cipher {

		.fields {
			public static final byte CIPHER_AES_GCM = -15;		// B
			public static final byte CIPHER_AES_CCM = -14;		// B
			public static final byte ALG_AES_GCM = -13;		// B
			public static final byte ALG_AES_CCM = -12;		// B
		}

		.publicMethodTable 1 12 {
			equals(Ljava/lang/Object;)Z 0;
			doFinal([BSS[BS)S 1;
			getAlgorithm()B 2;
			init(Ljavacard/security/Key;B)V 3;
			init(Ljavacard/security/Key;B[BSS)V 4;
			update([BSS[BS)S 5;
			getCipherAlgorithm()B 6;
			getPaddingAlgorithm()B 7;
			init(Ljavacard/security/Key;B[BSSSSS)V 255;
			updateAAD([BSS)V 255;
			retrieveTag([BSS)S 255;
			verifyTag([BSSS)Z 255;
		}

		.packageMethodTable 0 {
		}

		.method protected <init>()V 0 {
			.stack 1;
			.locals 0;

				L0:	aload_0;
					invokespecial 2;		// javacardx/crypto/Cipher.<init>()V
					return;
		}

		.method public abstract init(Ljavacard/security/Key;B)V 3 {
			.descriptor	Ljavacard/security/Key;	1.0;

		}

		.method public abstract init(Ljavacard/security/Key;B[BSS)V 4 {
			.descriptor	Ljavacard/security/Key;	1.0;

		}

		.method public abstract init(Ljavacard/security/Key;B[BSSSSS)V 8 {
			.descriptor	Ljavacard/security/Key;	1.0;

		}

		.method public abstract updateAAD([BSS)V 9 {
		}

		.method public abstract update([BSS[BS)S 5 {
		}

		.method public abstract doFinal([BSS[BS)S 1 {
		}

		.method public abstract retrieveTag([BSS)S 10 {
		}

		.method public abstract verifyTag([BSSS)Z 11 {
		}

	}

}
